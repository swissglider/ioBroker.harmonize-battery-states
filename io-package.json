{
    "common": {
        "name": "harmonize-battery-states",
        "version": "1.0.6",
        "news": {
            "1.0.6": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update interval time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n- In the Admin Device View in the extendable area add all parameter dynamicaly from object and state\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Zeit für die Aktualisierung des Scan- / Batteriezustandsintervalls in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n- Fügen Sie in der Admin-Geräteansicht im erweiterbaren Bereich alle Parameter dynamisch aus Objekt und Status hinzu\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время интервала обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n- В представлении устройства администратора в расширяемой области динамически добавляйте все параметры из объекта и состояния\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de intervalo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n- Na visualização do dispositivo de administração na área extensível, adicione todos os parâmetros dinamicamente do objeto e do estado\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Intervalinterval voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n- Voeg in de Admin Device View in het uitbreidbare gebied alle parameter dynamiek toe vanuit object en status\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps d'intervalle de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n- Dans la vue de l'appareil d'administration dans la zone extensible, ajoutez dynamiquement tous les paramètres de l'objet et de l'état\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Intervallo di aggiornamento dello stato della batteria / scansione in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n- In Admin Device View nell'area estensibile aggiungere tutti i parametri dinamicamente dall'oggetto e dallo stato\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de intervalo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n- En la Vista del dispositivo de administración en el área extensible, agregue todos los parámetros dinámicamente del objeto y el estado\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas interwału aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n- W widoku urządzenia administratora w obszarze rozszerzalnym dodaj dynamicznie wszystkie parametry z obiektu i stanu\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新间隔时间，以毫秒为单位（毫秒）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n-在“管理设备视图”的可扩展区域中，动态添加对象和状态中的所有参数\n\n##更新日志"
            },
            "1.0.5": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update interval time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n- In the Admin Device View in the extendable area add all parameter dynamicaly from object and state\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Zeit für die Aktualisierung des Scan- / Batteriezustandsintervalls in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n- Fügen Sie in der Admin-Geräteansicht im erweiterbaren Bereich alle Parameter dynamisch aus Objekt und Status hinzu\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время интервала обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n- В представлении устройства администратора в расширяемой области динамически добавляйте все параметры из объекта и состояния\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de intervalo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n- Na visualização do dispositivo de administração na área extensível, adicione todos os parâmetros dinamicamente do objeto e do estado\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Intervalinterval voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n- Voeg in de Admin Device View in het uitbreidbare gebied alle parameter dynamiek toe vanuit object en status\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps d'intervalle de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n- Dans la vue de l'appareil d'administration dans la zone extensible, ajoutez dynamiquement tous les paramètres de l'objet et de l'état\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Intervallo di aggiornamento dello stato della batteria / scansione in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n- In Admin Device View nell'area estensibile aggiungere tutti i parametri dinamicamente dall'oggetto e dallo stato\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de intervalo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n- En la Vista del dispositivo de administración en el área extensible, agregue todos los parámetros dinámicamente del objeto y el estado\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas interwału aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n- W widoku urządzenia administratora w obszarze rozszerzalnym dodaj dynamicznie wszystkie parametry z obiektu i stanu\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新间隔时间，以毫秒为单位（毫秒）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n-在“管理设备视图”的可扩展区域中，动态添加对象和状态中的所有参数\n\n##更新日志"
            },
            "1.0.4": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n- In the Admin Device View in the extendable area add all parameter dynamicaly from object and state\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n- Fügen Sie in der Admin-Geräteansicht im erweiterbaren Bereich alle Parameter dynamisch aus Objekt und Status hinzu\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n- В представлении устройства администратора в расширяемой области динамически добавляйте все параметры из объекта и состояния\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n- Na visualização do dispositivo de administração na área extensível, adicione todos os parâmetros dinamicamente do objeto e do estado\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n- Voeg in de Admin Device View in het uitbreidbare gebied alle parameter dynamiek toe vanuit object en status\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n- Dans la vue de l'appareil d'administration dans la zone extensible, ajoutez dynamiquement tous les paramètres de l'objet et de l'état\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n- In Admin Device View nell'area estensibile aggiungere tutti i parametri dinamicamente dall'oggetto e dallo stato\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n- En la Vista del dispositivo de administración en el área extensible, agregue todos los parámetros dinámicamente del objeto y el estado\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n- W widoku urządzenia administratora w obszarze rozszerzalnym dodaj dynamicznie wszystkie parametry z obiektu i stanu\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n-在“管理设备视图”的可扩展区域中，动态添加对象和状态中的所有参数\n\n##更新日志"
            },
            "1.0.3": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n- In the Admin Device View in the extendable area add all parameter dynamicaly from object and state\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n- Fügen Sie in der Admin-Geräteansicht im erweiterbaren Bereich alle Parameter dynamisch aus Objekt und Status hinzu\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n- В представлении устройства администратора в расширяемой области динамически добавляйте все параметры из объекта и состояния\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n- Na visualização do dispositivo de administração na área extensível, adicione todos os parâmetros dinamicamente do objeto e do estado\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n- Voeg in de Admin Device View in het uitbreidbare gebied alle parameter dynamiek toe vanuit object en status\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n- Dans la vue de l'appareil d'administration dans la zone extensible, ajoutez dynamiquement tous les paramètres de l'objet et de l'état\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n- In Admin Device View nell'area estensibile aggiungere tutti i parametri dinamicamente dall'oggetto e dallo stato\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n- En la Vista del dispositivo de administración en el área extensible, agregue todos los parámetros dinámicamente del objeto y el estado\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n- W widoku urządzenia administratora w obszarze rozszerzalnym dodaj dynamicznie wszystkie parametry z obiektu i stanu\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n-在“管理设备视图”的可扩展区域中，动态添加对象和状态中的所有参数\n\n##更新日志"
            },
            "1.0.2": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n- In the Admin Device View in the extendable area add all parameter dynamicaly from object and state\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n- Fügen Sie in der Admin-Geräteansicht im erweiterbaren Bereich alle Parameter dynamisch aus Objekt und Status hinzu\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n- В представлении устройства администратора в расширяемой области динамически добавляйте все параметры из объекта и состояния\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n- Na visualização do dispositivo de administração na área extensível, adicione todos os parâmetros dinamicamente do objeto e do estado\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n- Voeg in de Admin Device View in het uitbreidbare gebied alle parameter dynamiek toe vanuit object en status\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n- Dans la vue de l'appareil d'administration dans la zone extensible, ajoutez dynamiquement tous les paramètres de l'objet et de l'état\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n- In Admin Device View nell'area estensibile aggiungere tutti i parametri dinamicamente dall'oggetto e dallo stato\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n- En la Vista del dispositivo de administración en el área extensible, agregue todos los parámetros dinámicamente del objeto y el estado\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n- W widoku urządzenia administratora w obszarze rozszerzalnym dodaj dynamicznie wszystkie parametry z obiektu i stanu\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n-在“管理设备视图”的可扩展区域中，动态添加对象和状态中的所有参数\n\n##更新日志"
            },
            "1.0.1": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n- In the Admin Device View in the extendable area add all parameter dynamicaly from object and state\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n- Fügen Sie in der Admin-Geräteansicht im erweiterbaren Bereich alle Parameter dynamisch aus Objekt und Status hinzu\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n- В представлении устройства администратора в расширяемой области динамически добавляйте все параметры из объекта и состояния\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n- Na visualização do dispositivo de administração na área extensível, adicione todos os parâmetros dinamicamente do objeto e do estado\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n- Voeg in de Admin Device View in het uitbreidbare gebied alle parameter dynamiek toe vanuit object en status\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n- Dans la vue de l'appareil d'administration dans la zone extensible, ajoutez dynamiquement tous les paramètres de l'objet et de l'état\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n- In Admin Device View nell'area estensibile aggiungere tutti i parametri dinamicamente dall'oggetto e dallo stato\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n- En la Vista del dispositivo de administración en el área extensible, agregue todos los parámetros dinámicamente del objeto y el estado\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n- W widoku urządzenia administratora w obszarze rozszerzalnym dodaj dynamicznie wszystkie parametry z obiektu i stanu\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n-在“管理设备视图”的可扩展区域中，动态添加对象和状态中的所有参数\n\n##更新日志"
            },
            "1.0.0": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n    },\n    \"native\": {\n        \"reachable\": true,\n        \"last_ts\": $ts (only if not reachable),\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\": $org state,\n        \"org_enum_area\": $org_enum_area,\n        \"org_enum_floor\": $org_enum_floor,\n        \"org_enum_rooms\": $org_enum_rooms,\n        \"org_common_type\": $org_common_type,\n        \"org_common_role\": $org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n    },\n    \"native\": {\n        \"erreichbar\": wahr,\n        \"last_ts\": $ ts (nur wenn nicht erreichbar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n    },\n    \"родной\": {\n        \"достижимо\": правда,\n        \"last_ts\": $ ts (только если недоступен),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": состояние $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"согласовать-состояния-батареи.0.-низкое-состояние батареи.\" $ ($ org id),\n}\n```\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n    },\n    \"nativo\": {\n        \"alcançável\": verdadeiro,\n        \"last_ts\": $ ts (somente se não acessível),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n    },\n    \"native\": {\n        \"bereikbaar\": waar,\n        \"last_ts\": $ ts (alleen indien niet bereikbaar),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": $ org staat,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n    },\n    \"originaire de\": {\n        \"accessible\": vrai,\n        \"last_ts\": $ ts (uniquement s'il n'est pas joignable),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": état de $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n    },\n    \"native\": {\n        \"raggiungibile\": vero,\n        \"last_ts\": $ ts (solo se non raggiungibile),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": $ org state,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n    },\n    \"nativo\": {\n        \"alcanzable\": verdadero,\n        \"last_ts\": $ ts (solo si no está disponible),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": $ org estado,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n    },\n    \"natywny\": {\n        „osiągalny”: prawda,\n        \"last_ts\": $ ts (tylko jeśli nieosiągalny),\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        „org_state”: stan $ org,\n        \"org_enum_area\": $ org_enum_area,\n        \"org_enum_floor\": $ org_enum_floor,\n        \"org_enum_rooms\": $ org_enum_rooms,\n        \"org_common_type\": $ org_common_type,\n        \"org_common_role\": $ org_common_role,\n    },\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n    },\n    “本地”：{\n        “可达”：是的，\n        “ last_ts”：$ ts（仅在无法访问时），\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：$ org状态，\n        “ org_enum_area”：$ org_enum_area，\n        “ org_enum_floor”：$ org_enum_floor，\n        “ org_enum_rooms”：$ org_enum_rooms，\n        “ org_common_type”：$ org_common_type，\n        “ org_common_role”：$ org_common_role，\n    },\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n\n##更新日志"
            },
            "0.0.2-5": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n        \"min\": true,\n        \"max\": false,\n        \"def\": false,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\":{$org-state},\n        \"reachable\": true,\n        \"last_seen\": $ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n&rightarrow; name and send_alarm can be configured on the admin panel.\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n        \"min\": wahr,\n        \"max\": false,\n        \"def\": falsch,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"erreichbar\": wahr,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n&rechter Pfeil; name und send_alarm können im Admin-Bereich konfiguriert werden.\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n        \"мин\": правда,\n        \"макс\": ложь,\n        \"def\": ложь,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": {$ org-state},\n        \"достижимо\": правда,\n        \"last_seen\": $ ts,\n    },\n    \"родной\": {\n        \"send_alarm\": правда,\n    }\n    \"_id\": \"Harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&правая стрелка; name и send_alarm можно настроить в панели администратора.\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n        \"min\": verdadeiro,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"alcançável\": verdadeiro,\n        \"last_seen\": $ ts,\n    },\n    \"nativo\": {\n        \"send_alarm\": verdadeiro,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&seta direita; name e send_alarm podem ser configurados no painel de administração.\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n        \"min\": waar,\n        \"max\": false,\n        \"def\": false,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"bereikbaar\": waar,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": waar,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&rechter pijl; name en send_alarm kunnen worden geconfigureerd op het admin paneel.\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n        \"min\": vrai,\n        \"max\": faux,\n        \"def\": faux,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"accessible\": vrai,\n        \"last_seen\": $ ts,\n    },\n    \"originaire de\": {\n        \"send_alarm\": vrai,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&flèche droite; name et send_alarm peuvent être configurés sur le panneau d'administration.\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n\n## Changelog",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n        \"min\": vero,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"raggiungibile\": vero,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&freccia destra; name e send_alarm possono essere configurati nel pannello di amministrazione.\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n        \"min\": verdadero,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"alcanzable\": verdadero,\n        \"last_seen\": $ ts,\n    },\n    \"nativo\": {\n        \"send_alarm\": verdadero,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&flecha correcta; name y send_alarm se pueden configurar en el panel de administración.\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"nazwa\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n        \"min\": prawda,\n        \"max\": fałsz,\n        \"def\": fałsz,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        \"org_state\": {$ org-state},\n        „osiągalny”: prawda,\n        \"last_seen\": $ ts,\n    },\n    \"natywny\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n&prawa strzałka; name i send_alarm można skonfigurować w panelu administratora.\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n        “ min”：是的，\n        “ max”：错误，\n        “ def”：否，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：{$ org-state}，\n        “可达”：是的，\n        “ last_seen”：$ ts，\n    },\n    “本地”：{\n        “ send_alarm”：是的，\n    }\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n＆右箭头;名称和send_alarm可以在管理面板上配置。\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n\n##更新日志"
            },
            "0.0.2-4": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n        \"min\": true,\n        \"max\": false,\n        \"def\": false,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\":{$org-state},\n        \"reachable\": true,\n        \"last_seen\": $ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n&rightarrow; name and send_alarm can be configured on the admin panel.\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n        \"min\": wahr,\n        \"max\": false,\n        \"def\": falsch,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"erreichbar\": wahr,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n&rechter Pfeil; name und send_alarm können im Admin-Bereich konfiguriert werden.\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n        \"мин\": правда,\n        \"макс\": ложь,\n        \"def\": ложь,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": {$ org-state},\n        \"достижимо\": правда,\n        \"last_seen\": $ ts,\n    },\n    \"родные\": {\n        \"send_alarm\": правда,\n    }\n    \"_id\": \"Harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&правая стрелка; name и send_alarm можно настроить в панели администратора.\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n        \"min\": verdadeiro,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"alcançável\": verdadeiro,\n        \"last_seen\": $ ts,\n    },\n    \"nativo\": {\n        \"send_alarm\": verdadeiro,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&seta direita; name e send_alarm podem ser configurados no painel de administração.\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n        \"min\": waar,\n        \"max\": false,\n        \"def\": false,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"bereikbaar\": waar,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": waar,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&rechter pijl; name en send_alarm kunnen worden geconfigureerd op het admin paneel.\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n        \"min\": vrai,\n        \"max\": faux,\n        \"def\": faux,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"accessible\": vrai,\n        \"last_seen\": $ ts,\n    },\n    \"originaire de\": {\n        \"send_alarm\": vrai,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&flèche droite; name et send_alarm peuvent être configurés sur le panneau d'administration.\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n\n## Changelog",
                "it": "! [Logo] (admin / harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n        \"min\": vero,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"raggiungibile\": vero,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&freccia destra; name e send_alarm possono essere configurati nel pannello di amministrazione.\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n        \"min\": verdadero,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"alcanzable\": verdadero,\n        \"last_seen\": $ ts,\n    },\n    \"nativo\": {\n        \"send_alarm\": verdadero,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&flecha correcta; name y send_alarm se pueden configurar en el panel de administración.\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"name\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n        \"min\": prawda,\n        \"max\": fałsz,\n        \"def\": fałsz,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        \"org_state\": {$ org-state},\n        „osiągalny”: prawda,\n        \"last_seen\": $ ts,\n    },\n    \"natywny\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n&prawa strzałka; name i send_alarm można skonfigurować w panelu administratora.\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n        “ min”：是的，\n        “ max”：错误，\n        “ def”：否，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：{$ org-state}，\n        “可达”：是的，\n        “ last_seen”：$ ts，\n    },\n    “本地”：{\n        “ send_alarm”：是的，\n    }\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n＆右箭头;名称和send_alarm可以在管理面板上配置。\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n\n##更新日志"
            },
            "0.0.2-3": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Desciption\n\nThis adapter first of all creates for all baterry states found on the iobroker a new state.  \n&rightarrow; New state has Role: value.lowBatteryHarmonized (boolean)   \n&rightarrow; percentage when low can be configured in admin (default and per role)   \n    \nTo achive this the following is done:\n1) collect all states with the following role\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) Scann can also be done manually on admin\n3) if the org state is no longer available, the new state will **further exists**. But the common parameter \"reachable\" will be false and the \"last_seen\" has the last state. There will be **no alarms** when reachable is false\n\n## Admin Parameters\n- Scan / Battery State update time in ms (milliseconds)\n- Default percentage when a battery state will be low\n- List of all the roles that was to be scanned. Default are:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- send alarm to pushover\n- send alarm to influxdb\n\n## value.lowBatteryHarmonized (object)\n\n```json\n{\n    \"type\": \"state\",\n    \"common\": {\n        \"name\": $Name from org state/channel/device,\n        \"org_state_name\": $org_state_name,\n        \"org_channel_name\": $org_state_name,\n        \"org_device_name\": $org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": true,\n        \"write\": false,\n        \"min\": true,\n        \"max\": false,\n        \"def\": false,\n        \"org_adapter\": $name of the org adapter,\n        \"org_id\": $org id,\n        \"org_state\":{$org-state},\n        \"reachable\": true,\n        \"last_seen\": $ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\"$($org id),\n}\n```\n&rightarrow; name and send_alarm can be configured on the admin panel.\n\n## Wishlist\n\n- Each adapter can be registered to get an alarm (the adapter must have an sendTo method with type:battery_alarm)   \n  &rightarrow; ev. can be configured on admin...\n\n## Changelog",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Beschreibung\n\nDieser Adapter erstellt zunächst für alle auf dem iobroker gefundenen Baterry-Zustände einen neuen Zustand.\n&rechter Pfeil; Neuer Status hat die Rolle: value.lowBatteryHarmonized (boolean)\n&rechter Pfeil; Prozentsatz, wenn niedrig, kann in admin konfiguriert werden (Standard und pro Rolle)\n    \nUm dies zu erreichen, wird Folgendes getan:\n1) Sammeln Sie alle Staaten mit der folgenden Rolle\n    - value.battery (%)\n    - Batterieprozent (%)\n    - value.lowBatt (0/1)\n2) Das Scannen kann auch manuell über den Administrator erfolgen\n3) Wenn der Organisationsstatus nicht mehr verfügbar ist, wird der neue Status **weiter existieren** Der allgemeine Parameter \"erreichbar\" ist jedoch falsch und \"last_seen\" hat den letzten Status. Es wird **keine Alarme** geben, wenn die Erreichbarkeit falsch ist \n\n## Admin-Parameter\n- Aktualisierungszeit des Scan- / Batteriezustands in ms (Millisekunden)\n- Standardprozentsatz, wenn der Batteriezustand niedrig ist\n- Liste aller Rollen, die gescannt werden sollten. Standard sind:\n  - value.battery (%)\n  - Batterieprozent (%)\n  - value.lowBatt (0/1)\n- Alarm an Pushover senden\n- Alarm an influxdb senden\n\n## value.lowBatteryHarmonized (Objekt)\n\n`` `json\n{\n    \"Typ\": \"Zustand\",\n    \"verbreitet\": {\n        \"name\": $ Name vom Organisationsstatus / Kanal / Gerät,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lesen\": wahr,\n        \"schreiben\": falsch,\n        \"min\": wahr,\n        \"max\": false,\n        \"def\": falsch,\n        \"org_adapter\": $ name des org adapters,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"erreichbar\": wahr,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"Batteriezustände harmonisieren.0.Batterie-niedrige-Zustände.\" $ ($ org id),\n}\n```\n&rechter Pfeil; name und send_alarm können im Admin-Bereich konfiguriert werden.\n\n## Wunschzettel\n\n- Jeder Adapter kann registriert werden, um einen Alarm zu erhalten (der Adapter muss eine sendTo-Methode mit dem Typ: batterie_alarm haben).\n  &rechter Pfeil; ev. kann auf admin konfiguriert werden ...\n\n## Änderungsprotokoll",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Описание\n\nЭтот адаптер в первую очередь создает для всех состояний батареи, обнаруженных на iobroker, новое состояние.\n&правая стрелка; Новое состояние имеет Role: value.lowBatteryHarmonized (boolean)\n&правая стрелка; процент при низком уровне можно настроить в админке (по умолчанию и для каждой роли)\n    \nДля этого делается следующее:\n1) собрать все состояния со следующей ролью\n    - значение. батарея (%)\n    - батарея. процент (%)\n    - value.lowBatt (0/1)\n2) Сканирование также можно выполнить вручную в админке.\n3) если состояние организации больше не доступно, новое состояние будет **далее существовать** Но общий параметр \"достижимый\" будет ложным, а \"last_seen\" будет иметь последнее состояние. Не будет **тревог** если достижимость - ложь \n\n## Параметры администратора\n- Время обновления сканирования / состояния батареи в мс (миллисекундах)\n- Процент по умолчанию, когда состояние батареи будет низким\n- Список всех ролей, которые нужно было просканировать. По умолчанию:\n  - значение. батарея (%)\n  - батарея. процент (%)\n  - value.lowBatt (0/1)\n- отправить тревогу в пустышку\n- отправить тревогу на infxdb\n\n## value.lowBatteryHarmonized (объект)\n\n`` json\n{\n    \"тип\": \"состояние\",\n    \"common\": {\n        \"name\": $ Имя из состояния / канала / устройства организации,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"тип\": \"логическое\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"читать\": правда,\n        \"написать\": ложь,\n        \"мин\": правда,\n        \"макс\": ложь,\n        \"def\": ложь,\n        \"org_adapter\": $ имя адаптера организации,\n        \"org_id\": идентификатор $ org,\n        \"org_state\": {$ org-state},\n        \"достижимо\": правда,\n        \"last_seen\": $ ts,\n    },\n    \"родные\": {\n        \"send_alarm\": правда,\n    }\n    \"_id\": \"Harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&правая стрелка; name и send_alarm можно настроить в панели администратора.\n\n## Список желаний\n\n- Каждый адаптер может быть зарегистрирован для получения сигнала тревоги (адаптер должен иметь метод sendTo с типом: battery_alarm)\n  &правая стрелка; ev. можно настроить в админке ...\n\n## Журнал изменений",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Desciption\n\nEm primeiro lugar, esse adaptador cria um novo estado para todos os estados de baterry encontrados no iobroker.\n&seta direita; O novo estado tem papel: value.lowBatteryHarmonized (boolean)\n&seta direita; a porcentagem quando baixa pode ser configurada no admin (padrão e por função)\n    \nPara conseguir isso, é feito o seguinte:\n1) coletar todos os estados com a seguinte função\n    - valor.batéria (%)\n    - bateria.porcento (%)\n    - value.lowBatt (0/1)\n2) A digitalização também pode ser feita manualmente no admin\n3) se o estado organizacional não estiver mais disponível, o novo estado **existirá mais** Mas o parâmetro comum \"alcançável\" será falso e o \"last_seen\" terá o último estado. Não haverá **alarmes** quando o alcançável for falso \n\n## Parâmetros Admin\n- Tempo de atualização de varredura / estado da bateria em ms (milissegundos)\n- Porcentagem padrão quando o estado da bateria será baixo\n- Lista de todas as funções a serem verificadas. Os padrões são:\n  - valor.batéria (%)\n  - bateria.porcento (%)\n  - value.lowBatt (0/1)\n- enviar alarme para pushover\n- enviar alarme para influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\n`` `json\n{\n    \"tipo\": \"estado\",\n    \"comum\": {\n        \"nome\": $ Nome do estado / canal / dispositivo da organização,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"ler\": verdadeiro,\n        \"escrever\": falso,\n        \"min\": verdadeiro,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ name do adaptador org,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"alcançável\": verdadeiro,\n        \"last_seen\": $ ts,\n    },\n    \"nativo\": {\n        \"send_alarm\": verdadeiro,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&seta direita; name e send_alarm podem ser configurados no painel de administração.\n\n## Lista de Desejos\n\n- Cada adaptador pode ser registrado para obter um alarme (o adaptador deve ter um método sendTo com tipo: battery_alarm)\n  &seta direita; ev. pode ser configurado no admin ...\n\n## Changelog",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Beschrijving\n\nDeze adapter creëert allereerst voor alle batterijtoestanden die op de iobroker worden gevonden een nieuwe toestand.\n&rechter pijl; Nieuwe staat heeft rol: waarde.lowBatteryHarmonized (boolean)\n&rechter pijl; percentage wanneer laag kan worden geconfigureerd in admin (standaard en per rol)\n    \nOm dit te bereiken wordt het volgende gedaan:\n1) Verzamel alle staten met de volgende rol\n    - waarde. batterij (%)\n    - batterij. percentage (%)\n    - waarde.lowBatt (0/1)\n2) Scann kan ook handmatig worden gedaan op admin\n3) als de org-status niet langer beschikbaar is, zal de nieuwe status **verder bestaan** Maar de algemene parameter \"bereikbaar\" zal onwaar zijn en de \"last_seen\" heeft de laatste status. Er zijn **geen alarmen** wanneer bereikbaar onwaar is \n\n## Admin-parameters\n- Updatetijd voor scan- / batterijstatus in ms (milliseconden)\n- Standaardpercentage wanneer een batterijstatus laag zal zijn\n- Lijst met alle rollen die gescand moesten worden. Standaard zijn:\n  - waarde. batterij (%)\n  - batterij. percentage (%)\n  - waarde.lowBatt (0/1)\n- stuur alarm naar pushover\n- stuur alarm naar influxdb\n\n## value.lowBatteryHarmonized (object)\n\n`` json\n{\n    \"type\": \"state\",\n    \"gemeenschappelijk\": {\n        \"name\": $ Naam van org staat / kanaal / apparaat,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lezen\": waar,\n        \"write\": false,\n        \"min\": waar,\n        \"max\": false,\n        \"def\": false,\n        \"org_adapter\": $ naam van de org-adapter,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"bereikbaar\": waar,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": waar,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&rechter pijl; name en send_alarm kunnen worden geconfigureerd op het admin paneel.\n\n## Verlanglijst\n\n- Elke adapter kan worden geregistreerd om een alarm te krijgen (de adapter moet een sendTo-methode hebben met het type: battery_alarm)\n  &rechter pijl; ev. kan worden geconfigureerd op admin ...\n\n## Changelog",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Description\n\nCet adaptateur crée tout d'abord pour tous les états de baterry trouvés sur l'iobroker un nouvel état.\n&flèche droite; Le nouvel état a le rôle: value.lowBatteryHarmonized (booléen)\n&flèche droite; le pourcentage quand bas peut être configuré dans admin (par défaut et par rôle)\n    \nPour y parvenir, procédez comme suit:\n1) Collectez tous les états avec le rôle suivant\n    - valeur.batterie (%)\n    - batterie.pourcentage (%)\n    - value.lowBatt (0/1)\n2) Scann peut également être fait manuellement sur admin\n3) si l'état de l'organisation n'est plus disponible, le nouvel état **existe encore** Mais le paramètre commun \"accessible\" sera faux et le \"last_seen\" aura le dernier état. Il n'y aura **aucune alarme** lorsque accessible est faux \n\n## Paramètres d'administration\n- Temps de mise à jour de l'état de la batterie / scan en ms (millisecondes)\n- Pourcentage par défaut lorsqu'un état de batterie sera faible\n- Liste de tous les rôles à analyser. Les valeurs par défaut sont:\n  - valeur.batterie (%)\n  - batterie.pourcentage (%)\n  - value.lowBatt (0/1)\n- envoyer une alarme à pushover\n- envoyer une alarme à influxdb\n\n## value.lowBatteryHarmonized (objet)\n\n`` json\n{\n    \"type\": \"état\",\n    \"commun\": {\n        \"name\": $ Nom de l'état de l'organisation / du canal / de l'appareil,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"booléen\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"lire\": vrai,\n        \"écrire\": faux,\n        \"min\": vrai,\n        \"max\": faux,\n        \"def\": faux,\n        \"org_adapter\": $ nom de l'adaptateur d'organisation,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"accessible\": vrai,\n        \"last_seen\": $ ts,\n    },\n    \"originaire de\": {\n        \"send_alarm\": vrai,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&flèche droite; name et send_alarm peuvent être configurés sur le panneau d'administration.\n\n## Liste de souhaits\n\n- Chaque adaptateur peut être enregistré pour obtenir une alarme (l'adaptateur doit avoir une méthode sendTo avec le type: battery_alarm)\n  &flèche droite; ev. peut être configuré sur admin ...\n\n## Changelog",
                "it": "! [Logo] (admin / harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Desciption\n\nQuesto adattatore crea prima di tutto per tutti gli stati della batteria trovati sull'iobroker un nuovo stato.\n&freccia destra; Il nuovo stato ha un ruolo: value.lowBatteryHarmonized (boolean)\n&freccia destra; la percentuale quando bassa può essere configurata in admin (impostazione predefinita e per ruolo)\n    \nPer ottenere ciò si esegue quanto segue:\n1) raccogliere tutti gli stati con il seguente ruolo\n    - value.battery (%)\n    - battery.percent (%)\n    - value.lowBatt (0/1)\n2) La scansione può essere eseguita anche manualmente su admin\n3) se lo stato dell'organizzazione non è più disponibile, il nuovo stato **esisterà ulteriormente** Ma il parametro comune \"raggiungibile\" sarà falso e \"last_seen\" ha l'ultimo stato. Non ci saranno **allarmi** quando Raggiungibile è falso \n\n## Parametri amministratore\n- Tempo di aggiornamento della scansione / stato della batteria in ms (millisecondi)\n- Percentuale predefinita quando lo stato della batteria sarà basso\n- Elenco di tutti i ruoli che dovevano essere scansionati. Di default sono:\n  - value.battery (%)\n  - battery.percent (%)\n  - value.lowBatt (0/1)\n- invia allarme a pushover\n- invia allarme a influxdb\n\n## value.lowBatteryHarmonized (oggetto)\n\n`` `` json\n{\n    \"tipo\": \"stato\",\n    \"Comune\": {\n        \"nome\": $ Nome dallo stato dell'organizzazione / canale / dispositivo,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"read\": vero,\n        \"scrivi\": falso,\n        \"min\": vero,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ nome dell'adattatore dell'organizzazione,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"raggiungibile\": vero,\n        \"last_seen\": $ ts,\n    },\n    \"native\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"Harmony-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&freccia destra; name e send_alarm possono essere configurati nel pannello di amministrazione.\n\n## Lista dei desideri\n\n- Ogni adattatore può essere registrato per ricevere un allarme (l'adattatore deve avere un metodo sendTo con tipo: battery_alarm)\n  &freccia destra; ev. può essere configurato su admin ...\n\n## Changelog",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Descripción\n\nEste adaptador, en primer lugar, crea para todos los estados de batería que se encuentran en el iobroker un nuevo estado.\n&flecha correcta; El nuevo estado tiene Rol: value.lowBatteryHarmonized (boolean)\n&flecha correcta; porcentaje cuando es bajo se puede configurar en admin (predeterminado y por rol)\n    \nPara lograr esto se hace lo siguiente:\n1) recopile todos los estados con el siguiente rol\n    - valor.batería (%)\n    - batería.porcentaje (%)\n    - value.lowBatt (0/1)\n2) El escaneo también se puede hacer manualmente en el administrador\n3) si el estado de la organización ya no está disponible, el nuevo estado **seguirá existiendo** Pero el parámetro común \"alcanzable\" será falso y \"last_seen\" tiene el último estado. No habrá **alarmas** cuando el alcance es falso \n\n## Parámetros de administrador\n- Tiempo de actualización del estado de la batería / escaneo en ms (milisegundos)\n- Porcentaje predeterminado cuando el estado de la batería será bajo\n- Lista de todos los roles que se iban a escanear. Por defecto son:\n  - valor.batería (%)\n  - batería.porcentaje (%)\n  - value.lowBatt (0/1)\n- enviar alarma a pushover\n- enviar alarma a influxdb\n\n## value.lowBatteryHarmonized (objeto)\n\njson\n{\n    \"tipo\": \"estado\",\n    \"común\": {\n        \"nombre\": $ Nombre del estado / canal / dispositivo de la organización,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"tipo\": \"booleano\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"leer\": verdadero,\n        \"escribir\": falso,\n        \"min\": verdadero,\n        \"max\": falso,\n        \"def\": falso,\n        \"org_adapter\": $ nombre del adaptador de la organización,\n        \"org_id\": $ org id,\n        \"org_state\": {$ org-state},\n        \"alcanzable\": verdadero,\n        \"last_seen\": $ ts,\n    },\n    \"nativo\": {\n        \"send_alarm\": verdadero,\n    }\n    \"_id\": \"harmonize-battery-states.0.battery-low-states.\" $ ($ org id),\n}\n```\n&flecha correcta; name y send_alarm se pueden configurar en el panel de administración.\n\n## Lista de deseos\n\n- Cada adaptador se puede registrar para recibir una alarma (el adaptador debe tener un método sendTo con el tipo: battery_alarm)\n  &flecha correcta; ev. se puede configurar en admin ...\n\n## Registro de cambios",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Opis\n\nTen adapter przede wszystkim tworzy nowy stan dla wszystkich stanów baterii znalezionych na iobrokerze.\n&prawa strzałka; Nowy stan ma rolę: value.lowBatteryHarmonized (boolean)\n&prawa strzałka; wartość procentowa, gdy niski można skonfigurować w panelu administracyjnym (domyślnie i na rolę)\n    \nAby to osiągnąć, wykonuje się następujące czynności:\n1) zbierz wszystkie stany z następującą rolą\n    - wartość. bateria (%)\n    - bateria.percent (%)\n    - value.lowBatt (0/1)\n2) Skanowanie można również wykonać ręcznie na admin\n3) jeśli stan organizacji nie jest już dostępny, nowy stan będzie **nadal istniał** Ale wspólny parametr „osiągalny” będzie miał wartość fałsz, a parametr „last_seen” ma ostatni stan. Nie będzie **żadnych alarmów** gdy osiągalność jest fałszywa \n\n## Parametry administratora\n- Czas aktualizacji skanowania / stanu baterii w ms (milisekundach)\n- Domyślna wartość procentowa, gdy stan baterii będzie niski\n- Lista wszystkich ról, które miały zostać przeskanowane. Domyślnie są to:\n  - wartość. bateria (%)\n  - bateria.percent (%)\n  - value.lowBatt (0/1)\n- wyślij alarm do pushover\n- wyślij alarm do influxdb\n\n## value.lowBatteryHarmonized (obiekt)\n\n`` Plik json\n{\n    \"typ\": \"stan\",\n    \"wspólny\": {\n        \"name\": $ Nazwa ze stanu organizacji / kanału / urządzenia,\n        \"org_state_name\": $ org_state_name,\n        \"org_channel_name\": $ org_state_name,\n        \"org_device_name\": $ org_state_name,\n        \"type\": \"boolean\",\n        \"role\": \"value.lowBatteryHarmonized\",\n        \"czytaj\": prawda,\n        \"write\": false,\n        \"min\": prawda,\n        \"max\": fałsz,\n        \"def\": fałsz,\n        \"org_adapter\": $ nazwa adaptera organizacyjnego,\n        \"org_id\": $ identyfikator organizacji,\n        \"org_state\": {$ org-state},\n        „osiągalny”: prawda,\n        \"last_seen\": $ ts,\n    },\n    \"natywny\": {\n        \"send_alarm\": true,\n    }\n    \"_id\": \"harmonize-battery-States.0.battery-low-states.\" $ ($ org id),\n}\n```\n&prawa strzałka; name i send_alarm można skonfigurować w panelu administratora.\n\n## Lista życzeń\n\n- Każdy adapter można zarejestrować, aby uzyskać alarm (adapter musi mieć metodę sendTo typu: battery_alarm)\n  &prawa strzałka; ev. można skonfigurować na admin ...\n\n## Changelog",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##描述\n\n该适配器首先为在iobroker上找到的所有巴特里状态创建一个新状态。\n＆右箭头;新状态具有角色：value.lowBatteryHarmonized（布尔值）\n＆右箭头;可以在admin中配置低百分比（默认值和每个角色）\n    \n为此，请执行以下操作：\n1）收集具有以下角色的所有状态\n    -电池电量（％）\n    -电池百分比（％）\n    -value.lowBatt（0/1）\n2）扫描也可以在管理员上手动完成\n3）如果组织状态不再可用，则新状态将“进一步存在”。但是公共参数“ reachable”将为false，并且“ last_seen”具有最后状态。当可达性为假时，将没有**没有警报**\n\n##管理参数\n-扫描/电池状态更新时间（以毫秒为单位）\n-电池电量低时的默认百分比\n-要扫描的所有角色的列表。默认值为：\n  -电池电量（％）\n  -电池百分比（％）\n  -value.lowBatt（0/1）\n-发送警报到下推\n-向influxdb发送警报\n\n## value.lowBatteryHarmonized（对象）\n\njson\n{\n    “ type”：“州”，\n    “普通”：{\n        “名称”：来自组织状态/渠道/设备的$ Name，\n        “ org_state_name”：$ org_state_name，\n        “ org_channel_name”：$ org_state_name，\n        “ org_device_name”：$ org_state_name，\n        “ type”：“ boolean”，\n        “ role”：“ value.lowBatteryHarmonized”，\n        “已读”：是，\n        “写”：false，\n        “ min”：是的，\n        “ max”：错误，\n        “ def”：否，\n        “ org_adapter”：组织适配器的$ name，\n        “ org_id”：$ org ID，\n        “ org_state”：{$ org-state}，\n        “可达”：是的，\n        “ last_seen”：$ ts，\n    },\n    “本地”：{\n        “ send_alarm”：是的，\n    }\n    “ _id”：“和谐电池状态.0。电池低状态。” $（$ org id），\n}\n```\n＆右箭头;名称和send_alarm可以在管理面板上配置。\n\n##愿望清单\n\n-可以注册每个适配器以获取警报（适配器必须具有类型为：battery_alarm的sendTo方法）\n  ＆右箭头; ev。可以在管理员上配置...\n\n##更新日志"
            },
            "0.0.2-2": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Developer manual\nThis section is intended for the developer. It can be deleted later",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Entwicklerhandbuch\nDieser Abschnitt richtet sich an Entwickler. Es kann später gelöscht werden",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Руководство разработчика\nЭтот раздел предназначен для разработчика. Его можно будет удалить позже",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Manual do desenvolvedor\nEsta seção é destinada ao desenvolvedor. Pode ser excluído mais tarde",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Ontwikkelaarshandleiding\nDit gedeelte is bedoeld voor de ontwikkelaar. Het kan later worden verwijderd",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Manuel du développeur\nCette section est destinée au développeur. Il peut être supprimé plus tard",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Manuale per sviluppatori\nQuesta sezione è destinata allo sviluppatore. Può essere cancellato in seguito",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Manual para desarrolladores\nEsta sección está destinada al desarrollador. Se puede eliminar más tarde",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Podręcznik programisty\nTa sekcja jest przeznaczona dla programistów. Można go później usunąć",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##开发人员手册\n本部分适用于开发人员。以后可以删除"
            },
            "0.0.2-1": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Developer manual\nThis section is intended for the developer. It can be deleted later",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Entwicklerhandbuch\nDieser Abschnitt richtet sich an Entwickler. Es kann später gelöscht werden",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Руководство разработчика\nЭтот раздел предназначен для разработчика. Его можно будет удалить позже",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Manual do desenvolvedor\nEsta seção é destinada ao desenvolvedor. Pode ser excluído mais tarde",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Ontwikkelaarshandleiding\nDit gedeelte is bedoeld voor de ontwikkelaar. Het kan later worden verwijderd",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Manuel du développeur\nCette section est destinée au développeur. Il peut être supprimé plus tard",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Manuale per sviluppatori\nQuesta sezione è destinata allo sviluppatore. Può essere cancellato in seguito",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Manual para desarrolladores\nEsta sección está destinada al desarrollador. Se puede eliminar más tarde",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Podręcznik programisty\nTa sekcja jest przeznaczona dla programistów. Można go później usunąć",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##开发人员手册\n本部分适用于开发人员。以后可以删除"
            },
            "0.0.2-0": {
                "en": "![Logo](admin/harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[![NPM version](http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n[![Downloads](https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)](https://www.npmjs.com/package/iobroker.harmonize-battery-states)\n![Number of Installations (latest)](http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n![Number of Installations (stable)](http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[![Dependency Status](https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)](https://david-dm.org/swissglider/iobroker.harmonize-battery-states)\n[![Known Vulnerabilities](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)](https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states)\n\n[![NPM](https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)](https://nodei.co/npm/iobroker.harmonize-battery-states/)\n\n**Tests:** ![Test and Release](https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter for ioBroker\n\nDo have marmonized battery states this adapter do it for you\n\n## Developer manual\nThis section is intended for the developer. It can be deleted later",
                "de": "! [Logo] (admin / harmonize-batteriezustände.png)\n# ioBroker.harmonize-Batteriezustände\n\n[! [NPM-Version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -Zustände)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- Zustände)\n! [Anzahl der Installationen (aktuell)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Anzahl der Installationen (stabil)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Abhängigkeitsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -Zustände)\n[! [Bekannte Sicherheitslücken] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonisieren-Batteriezustände)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test und Veröffentlichung] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adapter für Harmonize-Battery-States für ioBroker\n\nHaben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt\n\n## Entwicklerhandbuch\nDieser Abschnitt richtet sich an Entwickler. Es kann später gelöscht werden",
                "ru": "! [Логотип] (admin / Harmony-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Версия NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -состояния)\n[! [Загрузки] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- состояния)\n! [Количество установок (последнее)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Количество установок (стабильная версия)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Статус зависимости] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -состояния)\n[! [Известные уязвимости] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-батареи-состояния)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Тесты: **! [Тестирование и выпуск] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## адаптер Harmony-battery-states для ioBroker\n\nУ вас есть мармонизированные батареи, этот адаптер сделает это за вас\n\n## Руководство разработчика\nЭтот раздел предназначен для разработчика. Его можно будет удалить позже",
                "pt": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versão NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -states)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalações (mais recentes)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalações (estável)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status de dependência] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -states)\n[! [Vulnerabilidades conhecidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testes: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptador harmonize-battery-states para ioBroker\n\nEste adaptador tem estados de bateria marmonizados para fazer isso por você\n\n## Manual do desenvolvedor\nEsta seção é destinada ao desenvolvedor. Pode ser excluído mais tarde",
                "nl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmoniseren-batterij-staten\n\n[! [NPM-versie] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -staten)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- staten)\n! [Aantal installaties (meest recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Aantal installaties (stabiel)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Afhankelijkheidsstatus] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -staten)\n[! [Bekende kwetsbaarheden] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmoniseren-batterijtoestanden)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test en release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## harmonize-battery-states adapter voor ioBroker\n\nHeb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet\n\n## Ontwikkelaarshandleiding\nDit gedeelte is bedoeld voor de ontwikkelaar. Het kan later worden verwijderd",
                "fr": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-batteries-états\n\n[! [Version NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -États)\n[! [Téléchargements] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- États)\n! [Nombre d'installations (dernier)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Nombre d'installations (stable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [État de la dépendance] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -États)\n[! [Vulnérabilités connues] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-batteries-états)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Tests: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adaptateur harmonize-battery-states pour ioBroker\n\nAyez des états de batterie marmonisés que cet adaptateur le fasse pour vous\n\n## Manuel du développeur\nCette section est destinée au développeur. Il peut être supprimé plus tard",
                "it": "! [Logo] (admin / Harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [NPM version] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stati)\n[! [Download] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stati)\n! [Numero di installazioni (più recente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Numero di installazioni (stabile)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Dependency Status] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stati)\n[! [Vulnerabilità note] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Test: **! [Test e rilascio] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adattatore per armonizzare gli stati della batteria per ioBroker\n\nGli stati della batteria marmonizzati questo adattatore lo fanno per te\n\n## Manuale per sviluppatori\nQuesta sezione è destinata allo sviluppatore. Può essere cancellato in seguito",
                "es": "! [Logotipo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Versión NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -estados)\n[! [Descargas] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- estados)\n! [Número de instalaciones (más reciente)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Número de instalaciones (estable)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Estado de dependencia] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -estados)\n[! [Vulnerabilidades conocidas] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .armonizar-estados-de-batería)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Pruebas: **! [Prueba y lanzamiento] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## Adaptador armonizar-estados-de-batería para ioBroker\n\nTiene baterías marmonizadas indica que este adaptador lo hace por usted\n\n## Manual para desarrolladores\nEsta sección está destinada al desarrollador. Se puede eliminar más tarde",
                "pl": "! [Logo] (admin / harmonize-battery-states.png)\n# ioBroker.harmonize-battery-states\n\n[! [Wersja NPM] (http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery -stanowe)\n[! [Downloads] (https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg)] (https://www.npmjs.com/package/iobroker.harmonize-battery- stany)\n! [Liczba instalacji (najnowsze)] (http://iobroker.live/badges/harmonize-battery-states-installed.svg)\n! [Liczba instalacji (stabilnych)] (http://iobroker.live/badges/harmonize-battery-states-stable.svg)\n[! [Status zależności] (https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg)] (https://david-dm.org/swissglider/iobroker.harmonize-battery -stanowe)\n[! [Znane luki w zabezpieczeniach] (https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg)] (https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-States)\n\n[! [NPM] (https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true)] (https://nodei.co/npm/iobroker.harmonize-battery-states/ )\n\n** Testy: **! [Test and Release] (https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg)\n\n## adapter harmonize-battery-States dla ioBroker\n\nCzy stan baterii z marmonizacją to ten adapter zrobi to za Ciebie\n\n## Podręcznik programisty\nTa sekcja jest przeznaczona dla programistów. Można go później usunąć",
                "zh-cn": "！[Logo]（admin / harmonize-battery-states.png）\n＃ioBroker.harmonize-battery-states\n\n[！[NPM版本]（http://img.shields.io/npm/v/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery -状态）\n[！[下载]（https://img.shields.io/npm/dm/iobroker.harmonize-battery-states.svg）]（https://www.npmjs.com/package/iobroker.harmonize-battery-状态）\n！[安装数量（最新）]（http://iobroker.live/badges/harmonize-battery-states-installed.svg）\n！[安装数量（稳定）]（http://iobroker.live/badges/harmonize-battery-states-stable.svg）\n[！[依赖状态]（https://img.shields.io/david/swissglider/iobroker.harmonize-battery-states.svg）]（https://david-dm.org/swissglider/iobroker.harmonize-battery -状态）\n[！[已知漏洞]（https://snyk.io/test/github/swissglider/ioBroker.harmonize-battery-states/badge.svg）]（https://snyk.io/test/github/swissglider/ioBroker .harmonize-battery-states）\n\n[！[NPM]（https://nodei.co/npm/iobroker.harmonize-battery-states.png?downloads=true）]（https://nodei.co/npm/iobroker.harmonize-battery-states/ ）\n\n**测试：**！[测试并发布]（https://github.com/swissglider/ioBroker.harmonize-battery-states/workflows/Test%20and%20Release/badge.svg）\n\n## ioBroker的harmonize-battery-states适配器\n\n确实有电池电量过高的情况，说明此适配器为您做到了\n\n##开发人员手册\n本部分适用于开发人员。以后可以删除"
            },
            "0.0.1": {
                "en": "initial release",
                "de": "Erstveröffentlichung",
                "ru": "Начальная версия",
                "pt": "lançamento inicial",
                "nl": "Eerste uitgave",
                "fr": "Première version",
                "it": "Versione iniziale",
                "es": "Versión inicial",
                "pl": "Pierwsze wydanie",
                "zh-cn": "首次出版"
            }
        },
        "title": "Harmonize Battery states",
        "titleLang": {
            "en": "Harmonize Battery states",
            "de": "Batteriestatus harmonisieren",
            "ru": "Гармонизировать состояния батареи",
            "pt": "Harmonizar estados da bateria",
            "nl": "Harmoniseer de batterijstatus",
            "fr": "Harmoniser les états de la batterie",
            "it": "Armonizza gli stati della batteria",
            "es": "Armonizar los estados de la batería",
            "pl": "Zharmonizuj stany baterii",
            "zh-cn": "协调电池状态"
        },
        "desc": {
            "en": "Do have marmonized battery states this adapter do it for you",
            "de": "Haben Sie marmonierte Batteriezustände, die dieser Adapter für Sie erledigt",
            "ru": "У вас есть мармонизированные батареи, этот адаптер сделает это за вас",
            "pt": "Este adaptador tem estados de bateria marmonizados para fazer isso por você",
            "nl": "Heb de gemarmoniseerde batterij vermeld dat deze adapter het voor u doet",
            "fr": "Ayez des états de batterie marmonisés que cet adaptateur le fasse pour vous",
            "it": "Gli stati della batteria marmonizzati questo adattatore lo fanno per te",
            "es": "Tiene baterías marmonizadas indica que este adaptador lo hace por usted",
            "pl": "Miej stan baterii z marmonizacją, ten adapter zrobi to za Ciebie",
            "zh-cn": "确实有电池电量过高的情况，说明此适配器为您完成"
        },
        "authors": [
            "Swissglider <npm@swissglider.com>"
        ],
        "keywords": [
            "availability",
            "battery",
            "devices",
            "iot",
            "alarm"
        ],
        "license": "MIT",
        "platform": "Javascript/Node.js",
        "main": "build/main.js",
        "icon": "harmonize-battery-states.png",
        "enabled": true,
        "extIcon": "https://raw.githubusercontent.com/swissglider/ioBroker.harmonize-battery-states/master/admin/harmonize-battery-states.png",
        "readme": "https://github.com/swissglider/ioBroker.harmonize-battery-states/blob/master/README.md",
        "loglevel": "info",
        "mode": "daemon",
        "type": "alarm",
        "compact": true,
        "connectionType": "local",
        "dataSource": "poll",
        "materialize": true,
        "localLink": "%web_protocol%://%ip%:%web_port%/harmonize-battery-states/index.html",
        "messagebox": true,
        "subscribe": "messagebox",
        "dependencies": [
            {
                "js-controller": ">=2.0.0",
                "web": ">=3.0.12"
            }
        ],
        "welcomeScreen": {
            "link": "harmonize-battery-states/index.html",
            "name": "harmonize-battery-states",
            "img": "harmonize-battery-states/img/device-availability.png",
            "color": "#ffe9c8",
            "order": 0
        }
    },
    "native": {
        "default_not_overwritte_scan_interval": 14400000,
        "default_not_overwritte_alarm_to_pushover": true,
        "default_not_overwritte_alarm_to_influx": true,
        "default_not_overwritte_default_role_list": [
            {
                "role": "value.battery",
                "type": "number",
                "default_low_percentage": 15
            },
            {
                "role": "battery.percent",
                "type": "number",
                "default_low_percentage": 15
            },
            {
                "role": "value.lowBatt",
                "type": "boolean"
            },
            {
                "role": "indicator.lowbat",
                "type": "boolean"
            }
        ],
        "scan_interval": 14400000,
        "alarm_to_pushover": true,
        "alarm_to_influx": true,
        "default_role_list": [
            {
                "role": "value.battery",
                "type": "number",
                "default_low_percentage": 15
            },
            {
                "role": "battery.percent",
                "type": "number",
                "default_low_percentage": 15
            },
            {
                "role": "value.lowBatt",
                "type": "boolean"
            },
            {
                "role": "indicator.lowbat",
                "type": "boolean"
            }
        ]
    },
    "objects": [],
    "instanceObjects": []
}